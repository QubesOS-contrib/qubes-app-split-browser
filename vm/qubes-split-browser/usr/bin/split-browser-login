#!/bin/bash
set -e -u -o pipefail
shopt -s inherit_errexit nullglob globstar

for f in {,/usr/local}/etc/split-browser/*.bash; do source "$f"; done


shorten() {
    local str=$1
    local len=$2

    if [[ ${#str} -gt $len ]]; then
        str=${str::$(( len - ${#SB_ELLIPSIS} ))}$SB_ELLIPSIS
    fi
    printf %s "$str"
}


mkdir -p -- "$SB_LOGIN_DIR"
cd       -- "$SB_LOGIN_DIR"

[[ $1 == get && $# == 3 ]]
url=$2
#title=$3

matching_sites=()
for f in */**/urls.txt; do
    while read -r line; do
        mode=${line::1}
        pattern=${line:1}

        case "$mode" in
            '=') [[ $url == "$pattern" ]] ;;
            '^') sep='[/?#]'; if [[ $pattern == *$sep ]]; then sep=''; fi
                 [[ $url == "$pattern" || $url == "$pattern"$sep* ]] ;;
            '~') [[ $url =~ ^($pattern)$ ]] ;;
              *) false ;;
        esac || continue

        matching_sites+=( "${f%/*}" )
        break
    done <"$f"
done

if [[ ${#matching_sites[@]} -gt 0 ]]; then
    if [[ ${SB_LOGIN_SECURITY_DELAY_SECONDS:-0} -gt 0 ]]; then
        # Wait a little to prevent the DisposableVM from tricking the user,
        # in case the window manager's focus stealing prevention is too lax

        ms=$(( SB_LOGIN_SECURITY_DELAY_SECONDS * 1000 ))
        notify-send --expire-time="$ms" --urgency=low "$SB_ELLIPSIS"
        sleep "$SB_LOGIN_SECURITY_DELAY_SECONDS"
    fi

    site=$(printf '%s\n' "${matching_sites[@]}" |
           SB_SCREEN=logins sb_dmenu -p 'Log into')
    cd -- "${site:?}"

    if [[ -e login ]]; then
        ./login
    else
        split-browser-login-fields
    fi
else
    prompt="Name a login entry for: $(shorten "$url" 50)"
    site=$(SB_SCREEN='logins - add' sb_dmenu -p "$prompt" </dev/null)
    mkdir -p -- "$site"
    cd       -- "$site"

    printf '=%s\n' "$url" >>urls.txt

    if [[ ! -e fields && ! -e login ]]; then
        mkdir fields
        : >fields/01-user.txt
        sb_pwgen >fields/02-pass.txt
    fi

    exec qubes-run-terminal
fi
