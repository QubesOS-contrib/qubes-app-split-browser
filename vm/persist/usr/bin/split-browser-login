#!/bin/bash
set -e -o pipefail
shopt -s nullglob globstar

for f in {,/usr/local}/etc/split-browser/persist/*.bash; do source "$f"; done


shorten() {
    local str=$1
    local len=$2
    local trunc=$SPLIT_BROWSER_ELLIPSIS

    if [[ ${#str} -gt $len ]]; then
        str=${str::$(( len - ${#trunc} ))}$trunc
    fi
    printf %s "$str"
}


mkdir -p -- "$SPLIT_BROWSER_LOGIN_DIR"
cd       -- "$SPLIT_BROWSER_LOGIN_DIR"

[[ $1 == get && $# == 3 ]]
url=$2
title=$3

matching_sites=()
for f in */**/urls.txt; do
    while read -r line; do
        mode=${line::1}
        pattern=${line:1}

        case "$mode" in
            '=') [[ $url == "$pattern" ]] ;;
            '^') sep='[/?#]'; if [[ $pattern == *$sep ]]; then sep=''; fi
                 [[ $url == "$pattern" || $url == "$pattern"$sep* ]] ;;
            '~') [[ $url =~ ^($pattern)$ ]] ;;
              *) false ;;
        esac || continue

        matching_sites+=( "${f%/*}" )
        break
    done <"$f"
done

if [[ ${#matching_sites[@]} -gt 0 ]]; then
    # Wait a little to prevent the DisposableVM from tricking the user,
    # in case dom0's focus stealing prevention is too lax
    notify-send --expire-time=2000 --urgency=low "$SPLIT_BROWSER_ELLIPSIS"
    sleep 2

    site=$(printf '%s\n' "${matching_sites[@]}" |
           split_browser_dmenu -p 'Log into')

    cd -- "${site:?}"

    if [[ -e login ]]; then
        ./login
    else
        split-browser-login-fields
    fi
else
    prompt="Name a login entry for: $(shorten "$url" 50)"
    site=$(split_browser_dmenu -p "$prompt" </dev/null)

    mkdir -p -- "$site"
    cd       -- "$site"

    printf '=%s\n' "$url" >>urls.txt

    if [[ ! -e fields && ! -e login ]]; then
        mkdir fields
        >fields/1-user.txt
        split_browser_pwgen >fields/2-pass.txt
    fi

    split_browser_terminal sh -c "tree -C --noreport; exec $SHELL"
fi
